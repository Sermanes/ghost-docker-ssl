map $sent_http_content_type $expires {
    default                    off;
    text/html                  epoch;
    text/css                   max;
    application/javascript     max;
    ~image/                    max;
}

server {
    listen 80;
    listen [::]:80;

    server_name computernerd.tech www.computernerd.tech;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://computernerd.tech$request_uri;
    }
}

server {
    listen [::]:443 ssl http2;
    listen 443 ssl http2;
    server_name www.computernerd.tech;

    location / {
	return 301 https://computernerd.tech$request_uri;
    }
}

server {
    listen 443 default_server ssl http2;
    listen [::]:443 default_server ssl http2;

    ssl_certificate /etc/letsencrypt/live/computernerd.tech/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/computernerd.tech/privkey.pem;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    server_name computernerd.tech;
    access_log /var/log/nginx/compuertnerd-https.log;
    error_log /var/log/nginx/compuertnerd-error.log;


    # add expires headers for static content
    expires $expires;
        
    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header HOST $http_host;
        proxy_set_header X-NginX-Proxy true;
	proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://ghost:2368;
        proxy_redirect off;
    }

    # allow Let's Encrypt checks on .well-known without proxying
    location ~ /.well-known {
        allow all;
    }

    client_max_body_size 50m;

 }
